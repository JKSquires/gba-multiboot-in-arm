b start

@include header.asm

transfer: ; r0: value. return in r1.
stmfd r13!,{r2}

ldr r2,=0x12A ; send: 0x400012A
orr r2,r2,0x4000000
strh r0,[r2]

sub r2,r2,2 ; control: 0x4000128
ldr r1,=%010000010000011 ; start 16-bit multiplayer transfer as master at 115200bps
strh r1,[r2]

waitTransferComplete:
ldrh r1,[r2]
tst r1,0x80
bne waitTransferComplete

sub r2,r2,6 ; data s1: 0x4000122
ldrh r1,[r2]

ldmfd r13!,{r2}
bx r14

start:
mov r0,0x4000000
ldr r1,=0x403
strh r1,[r0]

mov r1,0x6000000
mov r2,0x1F ; red indicator
strh r2,[r1]

waitForA:
ldr r2,[r0,0x130]
tst r2,1
bne waitForA

mov r2,0x210 ; dark yellow indicator
strh r2,[r1]

ldr r1,=0x134
mov r2,0
strh r2,[r0,r1]

ldr r0,=0x6202
waitUntilReady:
bl transfer
and r1,r1,0xFF00
cmp r1,0x7200
bne waitUntilReady

mov r0,0x6100
bl transfer

addr r2,client

mov r3,0
mov r4,0xC0
sendBranchAndHeader:
ldrh r0,[r2,r3]
bl transfer
add r3,r3,2
cmp r3,r4
blt sendBranchAndHeader

ldr r0,=0x6202
bl transfer

; see https://problemkaputt.de/gbatek-bios-multi-boot-single-game-pak.htm
mov r2,0x3000000 ; storing the multiboot parameter structure here

mov r3,0x1E ; client bit
mov r4,2
strb r4,[r2,r3]

mov r3,0x20 ; boot source pointer
addr r4,client
add r4,r4,0xC0
str r4,[r2,r3]

mov r3,0x24 ; boot end pointer
addr r4,clientEnd
str r4,[r2,r3]

mov r3,0x1C ; palette data
mov r4,0xC1
strb r4,[r2,r3]

mov r0,0x6300
orr r0,r0,r4
bl transfer

mov r0,0x6300
orr r0,r0,r4
bl transfer

mov r3,0x19 ; client data [0]
strb r1,[r2,r3]

mov r3,0x1A ; client data [1]
mov r4,0xFF
strb r4,[r2,r3]

mov r3,0x1B ; client data [2]
strb r4,[r2,r3]

mov r3,0x14 ; handshake data
and r4,r1,0xFF
add r4,r4,0x11
add r4,r4,0xFF
add r4,r4,0xFF
and r4,r4,0xFF
strb r4,[r2,r3]

and r4,r4,0xFF
orr r0,r4,0x6400
bl transfer

mov r0,r2
mov r1,1
swi 0x250000 ; multiboot BIOS function / software interrupt

mov r3,0x6000000
mov r4,0x3E0 ; green indicator
strh r4,[r3]

loop:
b loop

client: ; This is where the program to be sent is stored. Note: this client program has to be at least 0x190 bytes and be a multiple of 0x10
@dcb 0x2E, 0x00, 0x00, 0xEA
@include header.asm
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0xA0, 0xE3, 0x20, 0x10, 0x9F, 0xE5
@dcb 0xB0, 0x10, 0xC0, 0xE0, 0x06, 0x04, 0xA0, 0xE3, 0x1F, 0x10, 0xA0, 0xE3, 0xB0, 0x10, 0xC0, 0xE0
@dcb 0x3E, 0x1E, 0xA0, 0xE3, 0xB2, 0x10, 0xC0, 0xE1, 0x1F, 0x1B, 0xA0, 0xE3, 0xB4, 0x10, 0xC0, 0xE1
@dcb 0xFE, 0xFF, 0xFF, 0xEA, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
@dcb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
clientEnd:
